---
kind: ScalarType
version: v1
definition:
  name: Int4
  graphql:
    typeName: Int4

---
kind: BooleanExpressionType
version: v1
definition:
  name: Int4BoolExp
  operand:
    scalar:
      type: Int4
      comparisonOperators:
        - name: _eq
          argumentType: Int4!
        - name: _gt
          argumentType: Int4!
        - name: _gte
          argumentType: Int4!
        - name: _in
          argumentType: "[Int4!]!"
        - name: _lt
          argumentType: Int4!
        - name: _lte
          argumentType: Int4!
        - name: _neq
          argumentType: Int4!
      dataConnectorOperatorMapping:
        - dataConnectorName: fpl
          dataConnectorScalarType: int4
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Int4BoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: fpl
  dataConnectorScalarType: int4
  representation: Int4
  graphql:
    comparisonExpressionTypeName: Int4ComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Float4
  graphql:
    typeName: Float4

---
kind: BooleanExpressionType
version: v1
definition:
  name: Float4BoolExp
  operand:
    scalar:
      type: Float4
      comparisonOperators:
        - name: _eq
          argumentType: Float4!
        - name: _gt
          argumentType: Float4!
        - name: _gte
          argumentType: Float4!
        - name: _in
          argumentType: "[Float4!]!"
        - name: _lt
          argumentType: Float4!
        - name: _lte
          argumentType: Float4!
        - name: _neq
          argumentType: Float4!
      dataConnectorOperatorMapping:
        - dataConnectorName: fpl
          dataConnectorScalarType: float4
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Float4BoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: fpl
  dataConnectorScalarType: float4
  representation: Float4
  graphql:
    comparisonExpressionTypeName: Float4ComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Text
  graphql:
    typeName: Text

---
kind: BooleanExpressionType
version: v1
definition:
  name: TextBoolExp
  operand:
    scalar:
      type: Text
      comparisonOperators:
        - name: _eq
          argumentType: Text!
        - name: _gt
          argumentType: Text!
        - name: _gte
          argumentType: Text!
        - name: _ilike
          argumentType: Text!
        - name: _in
          argumentType: "[Text!]!"
        - name: _iregex
          argumentType: Text!
        - name: _like
          argumentType: Text!
        - name: _lt
          argumentType: Text!
        - name: _lte
          argumentType: Text!
        - name: _neq
          argumentType: Text!
        - name: _nilike
          argumentType: Text!
        - name: _niregex
          argumentType: Text!
        - name: _nlike
          argumentType: Text!
        - name: _nregex
          argumentType: Text!
        - name: _regex
          argumentType: Text!
        - name: starts_with
          argumentType: Text!
        - name: ts_match_tt
          argumentType: Text!
      dataConnectorOperatorMapping:
        - dataConnectorName: fpl
          dataConnectorScalarType: text
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: TextBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: fpl
  dataConnectorScalarType: text
  representation: Text
  graphql:
    comparisonExpressionTypeName: TextComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Numeric
  graphql:
    typeName: Numeric

---
kind: BooleanExpressionType
version: v1
definition:
  name: NumericBoolExp
  operand:
    scalar:
      type: Numeric
      comparisonOperators:
        - name: _eq
          argumentType: Numeric!
        - name: _gt
          argumentType: Numeric!
        - name: _gte
          argumentType: Numeric!
        - name: _in
          argumentType: "[Numeric!]!"
        - name: _lt
          argumentType: Numeric!
        - name: _lte
          argumentType: Numeric!
        - name: _neq
          argumentType: Numeric!
      dataConnectorOperatorMapping:
        - dataConnectorName: fpl
          dataConnectorScalarType: numeric
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: NumericBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: fpl
  dataConnectorScalarType: numeric
  representation: Numeric
  graphql:
    comparisonExpressionTypeName: NumericComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Int8
  graphql:
    typeName: Int8

---
kind: BooleanExpressionType
version: v1
definition:
  name: Int8BoolExp
  operand:
    scalar:
      type: Int8
      comparisonOperators:
        - name: _eq
          argumentType: Int8!
        - name: _gt
          argumentType: Int8!
        - name: _gte
          argumentType: Int8!
        - name: _in
          argumentType: "[Int8!]!"
        - name: _lt
          argumentType: Int8!
        - name: _lte
          argumentType: Int8!
        - name: _neq
          argumentType: Int8!
      dataConnectorOperatorMapping:
        - dataConnectorName: fpl
          dataConnectorScalarType: int8
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Int8BoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: fpl
  dataConnectorScalarType: int8
  representation: Int8
  graphql:
    comparisonExpressionTypeName: Int8ComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: Int4AggExp
  operand:
    scalar:
      aggregatedType: Int4
      aggregationFunctions:
        - name: avg
          returnType: Numeric
        - name: bit_and
          returnType: Int4
        - name: bit_or
          returnType: Int4
        - name: bit_xor
          returnType: Int4
        - name: max
          returnType: Int4
        - name: min
          returnType: Int4
        - name: stddev
          returnType: Numeric
        - name: stddev_pop
          returnType: Numeric
        - name: stddev_samp
          returnType: Numeric
        - name: sum
          returnType: Int8
        - name: var_pop
          returnType: Numeric
        - name: var_samp
          returnType: Numeric
        - name: variance
          returnType: Numeric
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: fpl
          dataConnectorScalarType: int4
          functionMapping:
            avg:
              name: avg
            bit_and:
              name: bit_and
            bit_or:
              name: bit_or
            bit_xor:
              name: bit_xor
            max:
              name: max
            min:
              name: min
            stddev:
              name: stddev
            stddev_pop:
              name: stddev_pop
            stddev_samp:
              name: stddev_samp
            sum:
              name: sum
            var_pop:
              name: var_pop
            var_samp:
              name: var_samp
            variance:
              name: variance
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Int4AggExp

---
kind: ScalarType
version: v1
definition:
  name: Float8
  graphql:
    typeName: Float8

---
kind: BooleanExpressionType
version: v1
definition:
  name: Float8BoolExp
  operand:
    scalar:
      type: Float8
      comparisonOperators:
        - name: _eq
          argumentType: Float8!
        - name: _gt
          argumentType: Float8!
        - name: _gte
          argumentType: Float8!
        - name: _in
          argumentType: "[Float8!]!"
        - name: _lt
          argumentType: Float8!
        - name: _lte
          argumentType: Float8!
        - name: _neq
          argumentType: Float8!
      dataConnectorOperatorMapping:
        - dataConnectorName: fpl
          dataConnectorScalarType: float8
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: Float8BoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: fpl
  dataConnectorScalarType: float8
  representation: Float8
  graphql:
    comparisonExpressionTypeName: Float8ComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: Float4AggExp
  operand:
    scalar:
      aggregatedType: Float4
      aggregationFunctions:
        - name: avg
          returnType: Float8
        - name: max
          returnType: Float4
        - name: min
          returnType: Float4
        - name: stddev
          returnType: Float8
        - name: stddev_pop
          returnType: Float8
        - name: stddev_samp
          returnType: Float8
        - name: sum
          returnType: Float4
        - name: var_pop
          returnType: Float8
        - name: var_samp
          returnType: Float8
        - name: variance
          returnType: Float8
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: fpl
          dataConnectorScalarType: float4
          functionMapping:
            avg:
              name: avg
            max:
              name: max
            min:
              name: min
            stddev:
              name: stddev
            stddev_pop:
              name: stddev_pop
            stddev_samp:
              name: stddev_samp
            sum:
              name: sum
            var_pop:
              name: var_pop
            var_samp:
              name: var_samp
            variance:
              name: variance
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: Float4AggExp

---
kind: AggregateExpression
version: v1
definition:
  name: TextAggExp
  operand:
    scalar:
      aggregatedType: Text
      aggregationFunctions:
        - name: max
          returnType: Text
        - name: min
          returnType: Text
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: fpl
          dataConnectorScalarType: text
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: TextAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: Int4OrderByExp
  operand:
    scalar:
      orderedType: Int4
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Int4OrderByExp

---
kind: OrderByExpression
version: v1
definition:
  name: Float4OrderByExp
  operand:
    scalar:
      orderedType: Float4
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: Float4OrderByExp

---
kind: OrderByExpression
version: v1
definition:
  name: TextOrderByExp
  operand:
    scalar:
      orderedType: Text
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: TextOrderByExp

---
kind: ScalarType
version: v1
definition:
  name: Bool
  graphql:
    typeName: Bool

---
kind: BooleanExpressionType
version: v1
definition:
  name: BoolBoolExp
  operand:
    scalar:
      type: Bool
      comparisonOperators:
        - name: _eq
          argumentType: Bool!
        - name: _gt
          argumentType: Bool!
        - name: _gte
          argumentType: Bool!
        - name: _in
          argumentType: "[Bool!]!"
        - name: _lt
          argumentType: Bool!
        - name: _lte
          argumentType: Bool!
        - name: _neq
          argumentType: Bool!
      dataConnectorOperatorMapping:
        - dataConnectorName: fpl
          dataConnectorScalarType: bool
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: BoolBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: fpl
  dataConnectorScalarType: bool
  representation: Bool
  graphql:
    comparisonExpressionTypeName: BoolComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Timestamp
  graphql:
    typeName: Timestamp

---
kind: BooleanExpressionType
version: v1
definition:
  name: TimestampBoolExp
  operand:
    scalar:
      type: Timestamp
      comparisonOperators:
        - name: _eq
          argumentType: Timestamp!
        - name: _gt
          argumentType: Timestamp!
        - name: _gte
          argumentType: Timestamp!
        - name: _in
          argumentType: "[Timestamp!]!"
        - name: _lt
          argumentType: Timestamp!
        - name: _lte
          argumentType: Timestamp!
        - name: _neq
          argumentType: Timestamp!
      dataConnectorOperatorMapping:
        - dataConnectorName: fpl
          dataConnectorScalarType: timestamp
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: TimestampBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: fpl
  dataConnectorScalarType: timestamp
  representation: Timestamp
  graphql:
    comparisonExpressionTypeName: TimestampComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: BoolAggExp
  operand:
    scalar:
      aggregatedType: Bool
      aggregationFunctions:
        - name: bool_and
          returnType: Bool
        - name: bool_or
          returnType: Bool
        - name: every
          returnType: Bool
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: fpl
          dataConnectorScalarType: bool
          functionMapping:
            bool_and:
              name: bool_and
            bool_or:
              name: bool_or
            every:
              name: every
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: BoolAggExp

---
kind: AggregateExpression
version: v1
definition:
  name: TimestampAggExp
  operand:
    scalar:
      aggregatedType: Timestamp
      aggregationFunctions:
        - name: max
          returnType: Timestamp
        - name: min
          returnType: Timestamp
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: fpl
          dataConnectorScalarType: timestamp
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: TimestampAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: BoolOrderByExp
  operand:
    scalar:
      orderedType: Bool
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: BoolOrderByExp

---
kind: OrderByExpression
version: v1
definition:
  name: TimestampOrderByExp
  operand:
    scalar:
      orderedType: Timestamp
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: TimestampOrderByExp

